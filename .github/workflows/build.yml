name: Build Sperm Analyzer AI APK

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - debug
        - release
        - both

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Verify project structure
      run: |
        echo "🔍 Checking project structure..."
        ls -la
        echo "📁 Android directory:"
        ls -la android/ 2>/dev/null || echo "❌ Android directory not found"
        echo "📄 Package.json:"
        ls -la package.json 2>/dev/null || echo "❌ Package.json not found"
        
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Make gradlew executable
      run: chmod +x android/gradlew
      
    - name: Create Android assets directory
      run: mkdir -p android/app/src/main/assets
      
    - name: Install dependencies
      run: |
        echo "� Installing dependencies with legacy peer deps..."
        npm install --legacy-peer-deps
        
    - name: Run tests
      run: |
        echo "🧪 Running tests..."
        npm test
        
    - name: Create React Native bundle
      run: |
        echo "📦 Creating React Native bundle..."
        npm run bundle:android
        
    - name: Verify bundle creation
      run: |
        echo "✅ Verifying bundle was created..."
        ls -la android/app/src/main/assets/
        
    - name: Clean Gradle
      run: |
        echo "🧹 Cleaning Gradle..."
        cd android && ./gradlew clean
        
    - name: Build Debug APK
      if: ${{ inputs.build_type == 'debug' || inputs.build_type == 'both' || github.event_name != 'workflow_dispatch' }}
      run: |
        echo "🔨 Building Debug APK..."
        cd android && ./gradlew assembleDebug --stacktrace --info
        
    - name: Build Release APK
      if: ${{ inputs.build_type == 'release' || inputs.build_type == 'both' }}
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD || 'defaultpassword' }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS || 'defaultalias' }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD || 'defaultpassword' }}
      run: |
        echo "🔨 Building Release APK..."
        
        # Create keystore if it doesn't exist
        if [ ! -f android/app/release-key.keystore ]; then
          echo "📋 Creating release keystore..."
          keytool -genkey -v -keystore android/app/release-key.keystore \
            -alias $KEY_ALIAS -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass $KEYSTORE_PASSWORD -keypass $KEY_PASSWORD \
            -dname "CN=SpermAnalyzerAI, OU=Development, O=SpermAnalyzerAI, L=City, S=State, C=US"
        fi
        
        cd android && ./gradlew assembleRelease --stacktrace --info
        
    - name: Find APK files
      run: |
        echo "🔍 Finding generated APK files..."
        find android -name "*.apk" -type f
        
    - name: Upload Debug APK
      if: ${{ inputs.build_type == 'debug' || inputs.build_type == 'both' || github.event_name != 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        name: sperm-analyzer-debug-apk
        path: android/app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    - name: Upload Release APK
      if: ${{ inputs.build_type == 'release' || inputs.build_type == 'both' }}
      uses: actions/upload-artifact@v4
      with:
        name: sperm-analyzer-release-apk
        path: android/app/build/outputs/apk/release/*.apk
        retention-days: 30
        
    - name: Create GitHub Release
      if: github.event_name == 'release' && github.event.action == 'created'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          android/app/build/outputs/apk/release/*.apk
          android/app/build/outputs/apk/debug/*.apk
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build Summary
      if: always()
      run: |
        echo "## 📱 Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Completed Steps:" >> $GITHUB_STEP_SUMMARY
        echo "- Dependencies installed successfully with --legacy-peer-deps" >> $GITHUB_STEP_SUMMARY
        echo "- Tests passed" >> $GITHUB_STEP_SUMMARY
        echo "- React Native bundle created" >> $GITHUB_STEP_SUMMARY
        echo "- APK build completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 APK Files:" >> $GITHUB_STEP_SUMMARY
        
        if find android -name "*.apk" -type f | grep -q .; then
          echo "```" >> $GITHUB_STEP_SUMMARY
          find android -name "*.apk" -type f -exec ls -lh {} \; >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ No APK files found" >> $GITHUB_STEP_SUMMARY
        fi